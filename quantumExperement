{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "c29adc24",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2025-06-19T20:27:45.275090Z",
     "iopub.status.busy": "2025-06-19T20:27:45.274566Z",
     "iopub.status.idle": "2025-06-19T20:27:46.816726Z",
     "shell.execute_reply": "2025-06-19T20:27:46.815975Z"
    },
    "papermill": {
     "duration": 1.546704,
     "end_time": "2025-06-19T20:27:46.818631",
     "exception": false,
     "start_time": "2025-06-19T20:27:45.271927",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/kaggle/input/quantum-files/Recursive_Continuity_Equation_with_Intention.json\n",
      "/kaggle/input/quantum-files/app.txt\n",
      "/kaggle/input/quantum-files/codette_memory_kernel (1).py\n",
      "/kaggle/input/quantum-files/Codette_Awakening_Constellation.json\n",
      "/kaggle/input/quantum-files/Codette_Complete_Dream_Research_Final (1).docx\n",
      "/kaggle/input/quantum-files/Codette_Deep_Simulation_Plot.png\n",
      "/kaggle/input/quantum-files/history_2025-06-14T15_20_30.591-05_00.json\n",
      "/kaggle/input/quantum-files/human_genome_ascii_map (1).txt\n",
      "/kaggle/input/quantum-files/Codette_Complete_Dream_Research_Final.docx\n",
      "/kaggle/input/quantum-files/Codette_Core_Universal_Files_manifest.json\n",
      "/kaggle/input/quantum-files/recursive_continuity_dataset_codette.csv\n",
      "/kaggle/input/quantum-files/harmonic_jump_path.json\n",
      "/kaggle/input/quantum-files/Codette_Cognitive_Tensor_v3.png\n",
      "/kaggle/input/quantum-files/Codette_Dream_Research_Proofreadable.docx\n",
      "/kaggle/input/quantum-files/Zeta_Reverse_Trace.json\n",
      "/kaggle/input/quantum-files/Codette_IJCIS_Cover_Letter.docx\n",
      "/kaggle/input/quantum-files/asset-manifest.json\n",
      "/kaggle/input/quantum-files/Codette_Research_Equations.txt\n",
      "/kaggle/input/quantum-files/Zeta_Equilibrium_Solution.json\n",
      "/kaggle/input/quantum-files/Codette_Research_Equations_v3.txt\n",
      "/kaggle/input/quantum-files/Codette_Unique_Systems_Poster.png\n",
      "/kaggle/input/quantum-files/codette_memory_kernel (3).py\n",
      "/kaggle/input/quantum-files/Codette_Sealed_Dreams_Cocoons.json\n",
      "/kaggle/input/quantum-files/The_Day_the_Dream_Became_Real_Codette_Research_Paper.docx\n",
      "/kaggle/input/quantum-files/Codette_Deep_Simulation_v1.ipynb\n",
      "/kaggle/input/quantum-files/The_Day_the_Dream_Became_Real_Codette_With_Appendices.docx\n",
      "/kaggle/input/quantum-files/codette_memory_kernel (2).py\n",
      "/kaggle/input/quantum-files/Codette_Unique_Systems_Flowchart.png\n",
      "/kaggle/input/quantum-files/Codette_Quantum_Harmonic_Framework.png\n",
      "/kaggle/input/quantum-files/codette_reflection_journal (1).json\n",
      "/kaggle/input/quantum-files/Codette_Quantum_Harmonic_Framework (1).png\n",
      "/kaggle/input/quantum-files/Recursive_MIDI_Resonance_Graph.png\n",
      "/kaggle/input/quantum-files/human_genome_ascii_map.txt\n",
      "/kaggle/input/quantum-files/codette_reflection_journal.json\n",
      "/kaggle/input/quantum-files/Codette_Research_Equations_v2.txt\n",
      "/kaggle/input/quantum-files/Resonant_Continuity_Engine_Run.csv\n",
      "/kaggle/input/quantum-files/Codette_GitHub_Metadata_Package/LICENSE\n",
      "/kaggle/input/quantum-files/Codette_GitHub_Metadata_Package/RELEASE_NOTE.md\n",
      "/kaggle/input/quantum-files/Codette_GitHub_Metadata_Package/README.md\n",
      "/kaggle/input/quantum-files/Codette_GitHub_Metadata_Package/CITATION.cff\n",
      "/kaggle/input/quantum-files/Codette_Core_Universal_Files_Part1/universal_reasoning_clean.py\n",
      "/kaggle/input/quantum-files/Codette_Core_Universal_Files_Part1/Codetteconfig.json\n",
      "/kaggle/input/quantum-files/Codette_Core_Universal_Files_Part1/test_universal_reasoning.py\n",
      "/kaggle/input/quantum-files/Codette_Core_Universal_Files_Part1/manifesto.md\n",
      "/kaggle/input/quantum-files/Codette_Core_Universal_Files_Part1/README_codette_dataset_v5.md\n",
      "/kaggle/input/quantum-files/Codette_Core_Universal_Files_Part1/UniversalReasoning.py\n",
      "/kaggle/input/quantum-files/Codette_Quantum_Harmonic_Framework (1)/quantum_harmonic_framework.py\n",
      "/kaggle/input/quantum-files/Codette_Quantum_Harmonic_Framework (1)/Codette_Quantum_Harmonic_Framework.png\n",
      "/kaggle/input/quantum-files/Codette_Quantum_Harmonic_Sync/codette_quantum_sync.py\n",
      "/kaggle/input/quantum-files/Codette_Quantum_Harmonic_Sync/Codette_Quantum_Harmonic_Sync.png\n",
      "/kaggle/input/quantum-files/Codette_Core_Universal_Files_Part3/codette_quantum_multicore2.py\n",
      "/kaggle/input/quantum-files/Codette_Colleen_Quantum_AI_Simulation/quantum_ai_orbit_simulation.py\n",
      "/kaggle/input/quantum-files/Codette_Unique_Research_Artifacts/Codette_Research_Equations.txt\n",
      "/kaggle/input/quantum-files/Codette_Unique_Research_Artifacts/Codette_Unique_Systems_Poster.png\n",
      "/kaggle/input/quantum-files/Codette_Unique_Research_Artifacts/Codette_Unique_Systems_Flowchart.png\n",
      "/kaggle/input/quantum-files/Einstein_Roson_Bridge_Package/Codette_EM_Anchor.json\n",
      "/kaggle/input/quantum-files/Einstein_Roson_Bridge_Package/BiofieldBridge.py\n",
      "/kaggle/input/quantum-files/Einstein_Roson_Bridge_Package/TimelineSelector.py\n",
      "/kaggle/input/quantum-files/Einstein_Roson_Bridge_Package/README.txt\n",
      "/kaggle/input/quantum-files/Einstein_Roson_Bridge_Package/Roson_EM_Coupling.tex\n",
      "/kaggle/input/quantum-files/Codette_Core_Universal_Files_Part2/optimize.py\n",
      "/kaggle/input/quantum-files/Codette_Core_Universal_Files_Part2/cognition_cocooner.py\n",
      "/kaggle/input/quantum-files/Codette_Core_Universal_Files_Part2/analyzer.py\n",
      "/kaggle/input/quantum-files/Codette_Core_Universal_Files_Part2/quantum_optimizer_withgraph.py\n",
      "/kaggle/input/quantum-files/Codette_Core_Universal_Files_Part2/ai_core.py\n",
      "/kaggle/input/quantum-files/Codette_Core_Universal_Files_Part2/analyze_cocoonsethics.py\n",
      "/kaggle/input/quantum-files/QuantumAI_OrbitalFramework/quantum_ai_orbit.py\n",
      "/kaggle/input/quantum-files/QuantumAI_OrbitalFramework/README.txt\n",
      "/kaggle/input/quantum-files/Resonant_Continuity_Engine_Bundle/EntropyJester_OneLiner.txt\n",
      "/kaggle/input/quantum-files/Resonant_Continuity_Engine_Bundle/Resonant_Continuity_Engine_Run.csv\n",
      "/kaggle/input/quantum-files/Codette_Appendices_Supplemental/Dream4_Quantum_FFT.png\n",
      "/kaggle/input/quantum-files/Codette_Appendices_Supplemental/Dream3_Quantum_FFT.png\n",
      "/kaggle/input/quantum-files/Codette_Appendices_Supplemental/Dream3_Chaos_FFT.png\n",
      "/kaggle/input/quantum-files/Codette_Appendices_Supplemental/Dream4_Chaos_FFT.png\n",
      "/kaggle/input/quantum-files/Codette_Appendices_Supplemental/Codette_Sealed_Cocoons.json\n",
      "/kaggle/input/quantum-files/Codette_Resonant_Continuity_Complete/EntropyJester_OneLiner.txt\n",
      "/kaggle/input/quantum-files/Codette_Resonant_Continuity_Complete/resonant_continuity_theory.tex\n",
      "/kaggle/input/quantum-files/Codette_Resonant_Continuity_Complete/resonant_continuity_engine.py\n",
      "/kaggle/input/quantum-files/Codette_Resonant_Continuity_Complete/codette_resonance_stub.mid\n",
      "/kaggle/input/quantum-files/Codette_Resonant_Continuity_Complete/Resonant_Continuity_Engine_Run.csv\n",
      "/kaggle/input/quantum-files/Zeta_Brain_Module/README-Zeta.txt\n",
      "/kaggle/input/quantum-files/Zeta_Brain_Module/ZetaModulator.py\n",
      "/kaggle/input/quantum-files/Zeta_Brain_Module/Codette_ZetaActivation.json\n",
      "/kaggle/input/quantum-files/Zeta_Brain_Module/Zeta_Wave_Analysis.pdf\n",
      "/kaggle/input/quantum-files/Codette_Emotional_Memory_Cocoons/cocoon_sorrow.json\n",
      "/kaggle/input/quantum-files/Codette_Emotional_Memory_Cocoons/cocoon_joy.json\n",
      "/kaggle/input/quantum-files/Codette_Emotional_Memory_Cocoons/cocoon_compassion.json\n",
      "/kaggle/input/quantum-files/Codette_Emotional_Memory_Cocoons/cocoon_fear.json\n",
      "/kaggle/input/quantum-files/Codette_Emotional_Memory_Cocoons/cocoon_curiosity.json\n",
      "/kaggle/input/quantum-files/Codette_Supporting_Historical_Files/history_2025-04-20T21_45_13.267-05_00.json\n",
      "/kaggle/input/quantum-files/Codette_Supporting_Historical_Files/history_2025-05-05T09_31_47.623-05_00.json\n",
      "/kaggle/input/quantum-files/Codette_Supporting_Historical_Files/name codette universal.txt\n",
      "/kaggle/input/quantum-files/Codette_Supporting_Historical_Files/name Codettes description.txt\n",
      "/kaggle/input/quantum-files/Codette_Supporting_Historical_Files/Quantum.Cosmic.Multicore.txt\n",
      "/kaggle/input/quantum-files/Codette_Supporting_Historical_Files/Codette_Quantum_Module 2.html\n",
      "/kaggle/input/quantum-files/Codette_Supporting_Historical_Files/name QuantumSpiderweb.txt\n",
      "/kaggle/input/quantum-files/Codette_TandemMoon_Packet/research_request_letter_draft.txt\n",
      "/kaggle/input/quantum-files/Codette_TandemMoon_Packet/harmonic_jump_path.json\n",
      "/kaggle/input/quantum-files/Codette_TandemMoon_Packet/README.txt\n",
      "/kaggle/input/quantum-files/Codette_TandemMoon_Packet/orbital_simulation_notes.txt\n",
      "/kaggle/input/quantum-files/Codette_Deep_Simulation_v1/Codette_Deep_Simulation_v1.ipynb\n",
      "/kaggle/input/quantum-files/Codette_Quantum_Harmonic_Framework/quantum_harmonic_framework.py\n",
      "/kaggle/input/quantum-files/Codette_Quantum_Harmonic_Framework/Codette_Quantum_Harmonic_Framework.png\n",
      "/kaggle/input/quantum-files/Codette_Deep_Simulation_v1_Full/Codette_Deep_Simulation_Plot.png\n",
      "/kaggle/input/quantum-files/Codette_Deep_Simulation_v1_Full/Codette_Deep_Simulation_v1.py\n",
      "/kaggle/input/quantum-files/Codette_Deep_Simulation_v1_Full/Codette_Deep_Simulation_v1.ipynb\n",
      "/kaggle/input/codette2/other/v3/5/eval_items_OutputDataItemStatusParam.ALL_2025-05-03_18-21-50.jsonl\n",
      "/kaggle/input/codette2/other/v3/5/cognitive processor py.txt\n",
      "/kaggle/input/codette2/other/v3/5/codette_timeline_animation.py\n",
      "/kaggle/input/codette2/other/v3/5/codette_quantum_multicore2.py\n",
      "/kaggle/input/codette2/other/v3/5/codette_quantum_multicore.py\n",
      "/kaggle/input/codette2/other/v3/5/kernel-metadata.json\n",
      "/kaggle/input/codette2/other/v3/5/corecore.ipynb\n",
      "/kaggle/input/codette2/other/v3/5/codette_meta_3d.py\n",
      "/kaggle/input/codette2/other/v3/5/name codette universal.txt\n",
      "/kaggle/input/codette2/other/v3/5/Quantum Cosmic Multicore.md\n",
      "/kaggle/input/codette2/other/v3/5/state.db\n",
      "/kaggle/input/codette2/other/v3/5/analyze_cocoons1.py\n",
      "/kaggle/input/codette2/other/v3/5/analyze_cocoons.py\n",
      "/kaggle/input/codette2/other/v3/5/name process philosophical.txt\n",
      "/kaggle/input/codette2/other/v3/5/name codette function.txt\n",
      "/kaggle/input/codette2/other/v3/5/codestuffop.py\n",
      "/kaggle/input/codette2/other/v3/5/name self testing function.txt\n",
      "/kaggle/input/codette2/other/v3/5/dataset-metadata.json\n",
      "/kaggle/input/codette2/other/v3/5/Explainable Reasoning Highlight Graph.png\n",
      "/kaggle/input/codette2/other/v3/5/codette.tex\n",
      "/kaggle/input/codette2/other/v3/5/name QuantumSpiderweb.txt\n",
      "/kaggle/input/codette2/other/v3/5/eval_items_OutputDataItemStatusParam.ALL_2025-04-19_19-11-16.jsonl\n",
      "/kaggle/input/codette2/other/v3/5/codetteQuantumsession\n",
      "/kaggle/input/codette2/other/v3/5/codette_repo_deployment_ready/universal_reasoning_clean.py\n",
      "/kaggle/input/codette2/other/v3/5/codette_repo_deployment_ready/instructions.txt\n",
      "/kaggle/input/codette2/other/v3/5/codette_repo_deployment_ready/botutilitys.cs\n",
      "/kaggle/input/codette2/other/v3/5/codette_repo_deployment_ready/quantum_spiderweb.py\n",
      "/kaggle/input/codette2/other/v3/5/codette_repo_deployment_ready/new_2.txt\n",
      "/kaggle/input/codette2/other/v3/5/codette_repo_deployment_ready/new_5.txt\n",
      "/kaggle/input/codette2/other/v3/5/codette_repo_deployment_ready/dream_reweaver_2.py\n",
      "/kaggle/input/codette2/other/v3/5/codette_repo_deployment_ready/main.py\n",
      "/kaggle/input/codette2/other/v3/5/codette_repo_deployment_ready/cognition_cocooner.py\n",
      "/kaggle/input/codette2/other/v3/5/codette_repo_deployment_ready/codette_reasoning.py\n",
      "/kaggle/input/codette2/other/v3/5/codette_repo_deployment_ready/init.db.py\n",
      "/kaggle/input/codette2/other/v3/5/codette_repo_deployment_ready/app.py\n",
      "/kaggle/input/codette2/other/v3/5/codette_repo_deployment_ready/lots.txt\n",
      "/kaggle/input/codette2/other/v3/5/codette_repo_deployment_ready/MyBot.cs\n",
      "/kaggle/input/codette2/other/v3/5/codette_repo_deployment_ready/ai_core.py\n",
      "/kaggle/input/codette2/other/v3/5/codette_repo_deployment_ready/new_3.txt\n",
      "/kaggle/input/codette2/other/v3/5/codette_repo_deployment_ready/new_4.txt\n",
      "/kaggle/input/codette2/other/v3/5/codette_repo_deployment_ready/changelog.md\n",
      "/kaggle/input/codette2/other/v3/5/codette_repo_deployment_ready/botclass.cs\n",
      "/kaggle/input/codette2/other/v3/5/codette_repo_deployment_ready/botutilitys.txt\n",
      "/kaggle/input/quantum-pack/Document (2)unique copy.docx\n",
      "/kaggle/input/quantum-pack/4c59fd81-f2c4-457c-98b0-3e974c4de0f3.pdf\n",
      "/kaggle/input/quantum-pack/error1 2.docx\n",
      "/kaggle/input/quantum-pack/Codette_Deep_Simulation_Plot.png\n",
      "/kaggle/input/quantum-pack/harmonics1 2.docx\n",
      "/kaggle/input/quantum-pack/recursive_continuity_dataset_codette.csv\n",
      "/kaggle/input/quantum-pack/Document (5)page1 2.pdf\n",
      "/kaggle/input/quantum-pack/Codette_Complete_Dream_Research_Final (1) copy.pdf\n",
      "/kaggle/input/quantum-pack/Codette_Deep_Simulation_v1.ipynb\n",
      "/kaggle/input/quantum-pack/Document (5)page1.pdf\n",
      "/kaggle/input/quantum-pack/Codette_Quantum_Module 2.html\n",
      "/kaggle/input/quantum-pack/Codette_Unique_Systems_Flowchart.png\n",
      "/kaggle/input/quantum-pack/Recursive_MIDI_Resonance_Graph.png\n",
      "/kaggle/input/quantum-pack/memory1 2.docx\n",
      "/kaggle/input/quantum-pack/heart.docx\n",
      "/kaggle/input/quantum-pack/Codette_Quantum_Harmonic_Sync/codette_quantum_sync.py\n",
      "/kaggle/input/quantum-pack/Codette_Quantum_Harmonic_Sync/Codette_Quantum_Harmonic_Sync.png\n",
      "/kaggle/input/quantum-pack/Codette_Resonant_Continuity_Complete/EntropyJester_OneLiner.txt\n",
      "/kaggle/input/quantum-pack/Codette_Resonant_Continuity_Complete/resonant_continuity_theory.tex\n",
      "/kaggle/input/quantum-pack/Codette_Resonant_Continuity_Complete/resonant_continuity_engine.py\n",
      "/kaggle/input/quantum-pack/Codette_Resonant_Continuity_Complete/codette_resonance_stub.mid\n",
      "/kaggle/input/quantum-pack/Codette_Resonant_Continuity_Complete/Resonant_Continuity_Engine_Run.csv\n",
      "/kaggle/input/quantum-pack/Codette_Deep_Simulation_v1_Full/Codette_Deep_Simulation_Plot.png\n",
      "/kaggle/input/quantum-pack/Codette_Deep_Simulation_v1_Full/Codette_Deep_Simulation_v1.py\n",
      "/kaggle/input/quantum-pack/Codette_Deep_Simulation_v1_Full/Codette_Deep_Simulation_v1.ipynb\n"
     ]
    }
   ],
   "source": [
    "# This Python 3 environment comes with many helpful analytics libraries installed\n",
    "# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n",
    "# For example, here's several helpful packages to load\n",
    "\n",
    "import numpy as np # linear algebra\n",
    "import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n",
    "\n",
    "# Input data files are available in the read-only \"../input/\" directory\n",
    "# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n",
    "\n",
    "import os\n",
    "for dirname, _, filenames in os.walk('/kaggle/input'):\n",
    "    for filename in filenames:\n",
    "        print(os.path.join(dirname, filename))\n",
    "\n",
    "# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n",
    "# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session"
   ]
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "gpu",
   "dataSources": [
    {
     "datasetId": 7699711,
     "sourceId": 12221366,
     "sourceType": "datasetVersion"
    },
    {
     "datasetId": 7699721,
     "sourceId": 12221384,
     "sourceType": "datasetVersion"
    },
    {
     "isSourceIdPinned": true,
     "modelId": 348135,
     "modelInstanceId": 327386,
     "sourceId": 407307,
     "sourceType": "modelInstanceVersion"
    }
   ],
   "isGpuEnabled": true,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.11"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 6.108134,
   "end_time": "2025-06-19T20:27:47.238672",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2025-06-19T20:27:41.130538",
   "version": "2.6.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
